// cria e insere o iframe do datepicker na tela
(function() {
	var iframe = document.createElement("iframe");
	iframe.id = "datepicker";
	iframe.src = "calendar.html";
	iframe.frameBorder = 0;
	iframe.scrolling = "no";
	iframe.style.backgroundColor = "#fff";
	iframe.style.border = "1px solid #ccc";
	iframe.style.position = "absolute";
	iframe.style.display = "none";
	iframe.style.zIndex = 10;
	document.body.appendChild(iframe);
})();

function datepicker(args) {
	var
	html = document.body.parentNode,
	iframe = document.getElementById("datepicker"),
	iframeContent = iframe.contentWindow || iframe.contentDocument,
	field = args.field,
	date;

	// args
	args.format = args.format || "dd/mm/yyyy";

	if (args.format == "dd/mm/yyyy" && isDate(field.value)) {
		date = field.value.split("/");
		date = new Date(Number(date[2]), Number(date[1]) - 1, Number(date[0]));
	}
	else
		date = new Date();

	// principal
	show();
	setCalendar(date);

	// funções
	function show() {
		// exibe o datepicker para o campo vinculado

		// posição
		field.style.position = "relative";
		iframe.style.top = field.offsetTop + field.offsetHeight + "px";
		iframe.style.left = field.offsetLeft + "px";

		// exibe
		iframe.style.display = "block";

		// evento - fechar
		//html.removeEventListener("mousedown", hide);
		html.onmousedown = null;
		html.onmousedown = hide;

		// callback - open
		if (args.open)
			args.open();
	}

	function hide(dateSelected) {
		// oculta o datepicker ao clicar fora ou selecionar um dia

		var hide = false;

		if (dateSelected)
			hide = true;
		else if (event.target != field)// click fora
			hide = true;

		if (hide && iframe.style.display.match(/block/i)) {
			iframe.style.display = "none";

			// callback - select
			if (dateSelected && args.select)
				args.select(dateSelected);

			// callback - close
			if (args.close)
				args.close();
		}
	}

	function setCalendar(date) {
		// configura o calendário

		var calendar = iframeContent.document.getElementById("calendar");
		
		// retorna o calendário em html para data especificada
		calendar.innerHTML = getCalendar(date);

		// ajusta as dimensões do datepicker com base no calendário
		iframe.height = calendar.clientHeight;
		iframe.width = calendar.clientWidth;

		// botões anterior/próximo mês
		var
		btnPrevMonth = iframeContent.document.getElementById("btnPrevMonth"),
		btnNextMonth = iframeContent.document.getElementById("btnNextMonth");

		// evento - botão anterior
		btnPrevMonth.onclick = function() {
			setCalendar(new Date(date.getFullYear(), date.getMonth() - 1, date.getDate()));
		};

		// evento - botão próximo
		btnNextMonth.onclick = function() {
			setCalendar(new Date(date.getFullYear(), date.getMonth() + 1, date.getDate()));
		};

		// evento - dias
		var days = iframeContent.document.getElementsByTagName("td");

		for (var i = 0; i < days.length; i++) {
			var day = days[i];

			if (day.className.match("day")) {
				day.onclick = function() {
					var
					d = this.innerHTML,
					m = date.getMonth() + 1,
					y = date.getFullYear();

					// formato
					if (args.format == "dd/mm/yyyy")
						date = d + "/" + m + "/" + y;

					field.value = date;
					hide(date);
				};
			}
		}
	}

	function getCalendar(date) {
		// retorna o calendário em html para a data espefificada

		if (typeof(date) == "undefined") {
			date = new Date();
		}

		var
		months = ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"],
		weekDays = ["Seg", "Ter", "Qua", "Qui", "Sex", "Sáb", "Dom"],
		day = date.getDate(),
		month = date.getMonth(),
		year = date.getFullYear(),
		thisMonth = new Date(year, month, 1),
		nextMonth = new Date(year, month + 1, 1),
		firstWeekDay = thisMonth.getDay(),
		monthDays = Math.round((nextMonth.getTime() - thisMonth.getTime()) / (1000 * 60 * 60 * 24)),
		html = '<table>';
		html += '<tr class="navbar"><td id="btnPrevMonth"><a><</a></td><td colspan="5" id="monthYear"><span>' + months[month] + ', ' + year + '</span></td><td id="btnNextMonth"><a>></a></td></tr>';
		html += '<tr class="week">';

		for (var i in weekDays) {
			var wd = weekDays[i];

			html += '<td>' + wd + '</td>';
		}

		html += '</tr><tr>';

		for (i = 0; i < firstWeekDay; i++) {
			html += '<td></td>';
		}

		for (j = 1; j <= monthDays; j++) {
			firstWeekDay %= 7;

			if (firstWeekDay == 0)
				html += '</tr><tr>';

			if (day == j)
				html += '<td class="day selected">' + j + '</td>';
			else
				html += '<td class="day">' + j + '</td>';

			firstWeekDay++;
		}

		for (k = 0; k < 7 - firstWeekDay; k++) {
			html += '<td></td>';
		}

		html += '</tr>';
		html += '</table>';

		return html;
	}

	function isDate(date) {
		// valida o formato da data - 1/1/2000 ou 01/01/2016

		try {
			return date.match(/^([0-9]{1,2})\/([0-9]{1,2})\/([0-9]{4})$/);
		}
		catch(ex){
			return false;
		}
	}
}
